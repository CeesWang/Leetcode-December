/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode increasingBST(TreeNode root) {
        if (root == null) {
            return root;
        }
        ArrayList<TreeNode> list = new ArrayList<>();
        dfs(root, list);
        return list.get(0);
    }
    
    public void dfs(TreeNode node, ArrayList<TreeNode> list) {
        if (node != null) {
            dfs(node.left, list);
            int size = list.size();
            if (size == 0) {
                node.left = null;
                list.add(node);
            }
            else {
                node.left = null;
                list.get(size - 1).right = node;
                list.add(node);
            }
            dfs(node.right, list);
        }
    }
}
