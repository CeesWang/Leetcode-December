class Solution {
    public boolean increasingTriplet(int[] nums) {
        for (int i = 0; i < nums.length - 2; ++i) {
            for (int j = i + 1; j < nums.length - 1; ++j) {
                for (int k = j + 1; k < nums.length; ++k) {
                    if (nums[i] < nums[j] && nums[j] < nums[k]) {
                        return true;
                    }
                }
            }
        }
        return false;
        // Integer i = nums[0];
        // Integer j = null;
        // Integer k = null;
        // for (int n = 1; n < nums; ++n) {
        //     if ()
        // }
        // return i < j  && j < k;
    }
}

class Solution {
    public boolean increasingTriplet(int[] nums) {
        Integer first = nums[0];
        Integer second = null;
        Integer last = null;
        for (int i = 1; i < nums.length; ++i) {
            if (last != null && nums[i] > last) return true;
            if (nums[i] <= first) {
                if (second != null) {
                    last = last == null ? second : Math.min(last, second);
                }
                first = nums[i];
                second = null;
            }
            else if (second == null && nums[i] > first) {
                second = nums[i];
            }
            else if (second != null) {
                if (nums[i] > second) {
                    return true;
                }
                else {
                    second = nums[i];
                }
            }

            // System.out.println(first + " " + second + " " + last + " " + nums[i]);
        }
        return false;
    }
}
