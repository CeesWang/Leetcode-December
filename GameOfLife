class Solution {
    public void gameOfLife(int[][] board) {
        int rowLen = board.length;
        int colLen = board[0].length;
        int [][] arr = board.clone();
        for (int i = 0; i < rowLen; ++i) {
            for (int j = 0; j < colLen; ++j) {
                int neighbors = 0;
                if (i - 1 >= 0 && j - 1 >= 0 && arr[i - 1][j - 1] == 1) neighbors++;
                if (i - 1 >= 0 && arr[i - 1][j] == 1) neighbors++;
                if (i - 1 >= 0 && j + 1 < colLen && arr[i - 1][j + 1] == 1) neighbors++;// 
                if (j - 1 >= 0 && arr[i][j - 1] == 1) neighbors++;
                if (j + 1 < colLen && arr[i][j + 1] == 1) neighbors++;
                if (i + 1 < rowLen && j - 1 >= 0 && arr[i + 1][j - 1] == 1) neighbors++;
                if (i + 1 < rowLen && arr[i + 1][j] == 1) neighbors++;
                if (i + 1 < rowLen && j + 1 < colLen && arr[i + 1][j + 1] == 1) neighbors++;
                if (arr[i][j] == 0 && neighbors == 3) board[i][j] = 1;
                if (arr[i][j] == 1 && (neighbors < 2 || neighbors > 3) ) board[i][j] = 0;
                if (i == 1 && j == 0) {
                    System.out.print(arr[i - 1][j + 1] == 1);                    
                }

            }
            System.out.println();
        }
    }
}

class Solution {
    public void gameOfLife(int[][] board) {
        int rowLen = board.length;
        int colLen = board[0].length;
        int [][] arr = new int[rowLen][colLen];
        for (int i = 0; i < rowLen; ++i) {
            for (int j = 0; j < colLen; ++j) {
                arr[i][j] = board[i][j];
            }
        }
        for (int i = 0; i < rowLen; ++i) {
            for (int j = 0; j < colLen; ++j) {
                int neighbors = 0;
                if (i - 1 >= 0 && j - 1 >= 0 && arr[i - 1][j - 1] == 1) neighbors++;
                if (i - 1 >= 0 && arr[i - 1][j] == 1) neighbors++;
                if (i - 1 >= 0 && j + 1 < colLen && arr[i - 1][j + 1] == 1) neighbors++;// 
                if (j - 1 >= 0 && arr[i][j - 1] == 1) neighbors++;
                if (j + 1 < colLen && arr[i][j + 1] == 1) neighbors++;
                if (i + 1 < rowLen && j - 1 >= 0 && arr[i + 1][j - 1] == 1) neighbors++;
                if (i + 1 < rowLen && arr[i + 1][j] == 1) neighbors++;
                if (i + 1 < rowLen && j + 1 < colLen && arr[i + 1][j + 1] == 1) neighbors++;
                if (arr[i][j] == 0 && neighbors == 3) board[i][j] = 1;
                if (arr[i][j] == 1 && (neighbors < 2 || neighbors > 3) ) board[i][j] = 0;
            }
        }
    }
}
