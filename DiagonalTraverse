class Solution {
    public int[] findDiagonalOrder(int[][] matrix) {
        if (matrix == null || matrix.length == 0) {
            return new int[]{};
        }
        int total = matrix.length * matrix[0].length;
        int [] diagonalArr = new int[total];
        int row = 0;
        int col = 0;
        int idx = 1;
        boolean up = true;
        diagonalArr[0] = matrix[0][0];
        while (idx < total) {
            if (up) {           // going up
                if (row - 1 < 0 && col < matrix[0].length - 1) {
                    up = !up;
                    col++;
                }
                else if (col == matrix[0].length - 1) {
                    up = !up;
                    row++;
                }
                else {
                    row--;
                    col++;
                }
            }
            else {              // going down
                if (col - 1 < 0 && row < matrix.length - 1) {
                    up = !up;
                    row++;
                }
                else if (row == matrix.length -1) {
                    up = !up;
                    col++;
                }
                else {
                    row++;
                    col--;
                }
            }
            // System.out.println(row + " " + col + " " + matrix[row][col]);
            diagonalArr[idx++] = matrix[row][col];
        }
        return diagonalArr;
    }
}
// 258
// 401
// 254081

// 0 0      // up  , col + 1, row + 1 
             
// 0 1      // down, col - 1, row - 1
// 1 0

// 2 0
// 1 1 
// 0 2

// 1 2
// 2 1

// 2 2
